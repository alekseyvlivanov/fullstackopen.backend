{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Notification","message","text","type","className","Filter","handleFilter","onChange","PersonForm","handleSubmit","handleName","handleNumber","newName","newNumber","onSubmit","value","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","App","useState","setPersons","filterName","setFilterName","setNewName","setNewNumber","setMessage","personsToShow","trim","filter","toLowerCase","includes","useEffect","personService","allPersons","target","e","preventDefault","oldPerson","find","window","confirm","returnedPerson","setTimeout","catch","err","error","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.547e6c03.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getPersons = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst createPerson = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst updatePerson = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => axios.delete(`${baseUrl}/${id}`);\n\nexport default { getPersons, createPerson, updatePerson, deletePerson };\n","import React, { useEffect, useState } from \"react\";\n\nimport personService from \"./services/persons\";\n\nimport \"./index.css\";\n\nconst Notification = ({ message: { text, type } }) => {\n  if (!text || !type) {\n    return null;\n  }\n\n  return <div className={type}>{text}</div>;\n};\n\nconst Filter = ({ handleFilter }) => {\n  return (\n    <div>\n      filter shown with <input onChange={handleFilter} />\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  handleSubmit,\n  handleName,\n  handleNumber,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input onChange={handleName} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumber} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <p>\n      {person.name} {person.number}{\" \"}\n      <button onClick={handleDelete(person.id, person.name)}>delete</button>\n    </p>\n  );\n};\n\nconst Persons = ({ persons, handleDelete }) => {\n  return persons.map((person) => (\n    <Person key={person.name} person={person} handleDelete={handleDelete} />\n  ));\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [message, setMessage] = useState({});\n\n  const handleFilter = ({ target: { value } }) => {\n    setFilterName(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = { name: newName, number: newNumber };\n    const oldPerson = persons.find((person) => person.name === newName);\n\n    if (oldPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .updatePerson(oldPerson.id, newPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== oldPerson.id ? person : returnedPerson\n              )\n            );\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setMessage({\n              text: `Updated ${returnedPerson.name}`,\n              type: \"success\",\n            });\n            setTimeout(() => setMessage({}), 2000);\n          })\n          .catch((err) => {\n            setMessage({ text: err.response.data.error, type: \"error\" });\n            setTimeout(() => setMessage({}), 2000);\n          });\n      }\n    } else {\n      personService\n        .createPerson(newPerson)\n        .then((person) => {\n          setPersons([...persons, person]);\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setMessage({ text: `Added ${person.name}`, type: \"success\" });\n          setTimeout(() => setMessage({}), 2000);\n        })\n        .catch((err) => {\n          setMessage({ text: err.response.data.error, type: \"error\" });\n          setTimeout(() => setMessage({}), 2000);\n        });\n    }\n  };\n\n  const handleName = ({ target: { value } }) => {\n    setNewName(value);\n  };\n\n  const handleNumber = ({ target: { value } }) => {\n    setNewNumber(value);\n  };\n\n  const handleDelete = (id, name) => () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter((p) => p.id !== id));\n          setMessage({ text: `Deleted ${name}`, type: \"success\" });\n          setTimeout(() => setMessage({}), 2000);\n        })\n        .catch((err) => {\n          setMessage({ text: err.response.data.error, type: \"error\" });\n          setTimeout(() => setMessage({}), 2000);\n        });\n    }\n  };\n\n  const personsToShow =\n    filterName.trim() === \"\"\n      ? persons\n      : persons.filter(({ name }) =>\n          name.trim().toLowerCase().includes(filterName.trim().toLowerCase())\n        );\n\n  const getPersons = () => {\n    personService.getPersons().then((allPersons) => setPersons(allPersons));\n  };\n\n  useEffect(getPersons, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter handleFilter={handleFilter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleName={handleName}\n        handleNumber={handleNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}